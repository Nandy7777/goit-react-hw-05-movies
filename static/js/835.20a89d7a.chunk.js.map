{"version":3,"file":"static/js/835.20a89d7a.chunk.js","mappings":"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","sources":["components/Movie/Movie.jsx","components/MovieDetails/MovieDetails.jsx","services/movie-api.jsx"],"sourcesContent":["import { useNavigate, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Movie = ({ dataCinema }) => {\n  const {\n    backdrop_path,\n    title,\n    original_title,\n    vote_average,\n    poster_path,\n    release_date,\n    overview,\n    genres,\n  } = dataCinema;\n  const location = useLocation();\n  const genresCinema = genres.map(gen => gen.name + ' ');\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <div p={`https://image.tmdb.org/t/p/w500${backdrop_path}`}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            navigate(location.state?.from ?? '/');\n          }}\n        >\n          Back\n        </button>\n      </div>\n      <div>\n        <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n        <div>\n          <h1>\n            {title || original_title}\n            <span> ({release_date})</span>\n          </h1>\n          <p>\n            User score <span> {vote_average}</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview || 'there is no overview yet'}</p>\n          <h3>Genres</h3>\n          <p>{genresCinema}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Movie;\n\nMovie.propTypes = {\n  dataCinema: PropTypes.object.isRequired,\n};","import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport {getDataById} from 'services/movie-api';\nimport Movie from 'components/Movie/Movie';\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      const movieData = await getDataById(movieId);\n      setMovie(movieData);\n      try {\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <Movie dataCinema={movie} />}\n      {movie && (\n        <div>\n          <h2>Additional information</h2>\n          <Link to=\"cast\" state={{ from: location }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </Link>\n        </div>\n      )}\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet context={{ movieId, movie }} />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'bdb1d61caa10ee3e96be08f98c1048db';\nconst URL_All_DAY = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_MOVIE = 'https://api.themoviedb.org/3/search/movie';\nconst URL_MOVIE = 'https://api.themoviedb.org/3/movie';\n\nexport async function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_All_DAY}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_MOVIE}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}"],"names":["dataCinema","backdrop_path","title","original_title","vote_average","poster_path","release_date","overview","genres","location","useLocation","genresCinema","map","gen","name","navigate","useNavigate","p","type","onClick","state","from","src","alt","movieId","useParams","useState","movie","setMovie","useEffect","getDataById","movieData","to","Suspense","fallback","context","API_KEY","URL_All_DAY","URL_SEARCH_MOVIE","URL_MOVIE","getDataPopularCinema","axios","api_key","language","data","results","getDataByName","query","id","getDataActorById","cast","getDataReviewsById","page"],"sourceRoot":""}