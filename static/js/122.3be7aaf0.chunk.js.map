{"version":3,"file":"static/js/122.3be7aaf0.chunk.js","mappings":"wQAwCA,EAnCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaV,OAXEE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAE6BC,EAAAA,EAAAA,IAAmBH,GAFhD,OAESI,EAFT,OAGGL,EAAWK,GAHd,gDAKGC,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,EAQD,GAAE,CAACN,KAGJ,yBACGF,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,OAGH,sEAIP,C,6LCrCKG,EAAU,mCACVC,EAAc,gDACdC,EAAmB,4CACnBC,EAAY,qCAEX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACLC,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaJ,IANjC,uBAMKO,EANL,EAMKA,KANL,kBAOIA,EAAKC,SAPT,gHAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACLN,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,QACVK,MAAM,GAAD,OAAKD,IAJP,kBAOoBN,EAAAA,GAAAA,IAAA,UAAaH,IAPjC,uBAOKM,EAPL,EAOKA,KAPL,kBAQIA,EAAKC,SART,gHAYA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BhB,GAA3B,gFACLQ,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,YAA0BN,IAN9C,uBAMKW,EANL,EAMKA,KANL,kBAOIA,GAPJ,gHAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCjB,GAAhC,gFACLQ,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,YAA0BN,EAA1B,aANpB,uBAMKW,EANL,EAMKA,KANL,kBAOIA,EAAKO,MAPT,gHAWA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCO,GAAlC,gFACLQ,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,QACVS,KAAM,GAJH,kBAOoBX,EAAAA,GAAAA,IAAA,UAAaF,EAAb,YAA0BN,EAA1B,aAPpB,uBAOKW,EAPL,EAOKA,KAPL,kBAQIA,EAAKC,SART,gH","sources":["components/Reviews/Reviews.jsx","services/movie-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getDataReviewsById } from 'services/movie-api';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n    \n    useEffect(() => {\n      (async () => {\n        try {\n          const dataReviews = await getDataReviewsById(movieId);\n          setReviews(dataReviews);\n        } catch (error) {\n          toast.error(error.message);\n        }\n      })();\n    }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            const { id, author, content } = review;\n            return (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'bdb1d61caa10ee3e96be08f98c1048db';\nconst URL_All_DAY = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_MOVIE = 'https://api.themoviedb.org/3/search/movie';\nconst URL_MOVIE = 'https://api.themoviedb.org/3/movie';\n\nexport async function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_All_DAY}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_MOVIE}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getDataReviewsById","dataReviews","toast","message","length","map","review","id","author","content","API_KEY","URL_All_DAY","URL_SEARCH_MOVIE","URL_MOVIE","getDataPopularCinema","axios","api_key","language","data","results","getDataByName","name","query","getDataById","getDataActorById","cast","page"],"sourceRoot":""}