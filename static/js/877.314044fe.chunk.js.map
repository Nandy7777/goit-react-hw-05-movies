{"version":3,"file":"static/js/877.314044fe.chunk.js","mappings":"iRAkDA,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAE0BC,EAAAA,EAAAA,GAAiBN,GAF3C,OAESO,EAFT,OAGGH,EAAQG,GAHX,gDAKGC,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,EAQD,GAAE,CAACT,KAGF,8BACGG,IACEA,EAAKO,OAAS,GACb,wBACGP,EAAKQ,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC7CC,EAAMJ,EAAY,yCACcA,GAClCK,EACJ,OACE,2BACE,gBAAKC,IAAKF,EAAKG,IAAI,yBACjB,4BACE,wBAAKN,KACL,wBAAKC,GAAa,iBAJfC,EAQZ,OAGH,qCAIT,C,qKC9CKK,EAAU,mCACVC,EAAc,gDACdC,EAAmB,4CACnBC,EAAY,qCAEX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACLC,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaJ,IANjC,uBAMKO,EANL,EAMKA,KANL,kBAOIA,EAAKC,SAPT,gHAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACLN,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,QACVK,MAAM,GAAD,OAAKD,IAJP,kBAOoBN,EAAAA,GAAAA,IAAA,UAAaH,IAPjC,uBAOKM,EAPL,EAOKA,KAPL,kBAQIA,EAAKC,SART,gHAYA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BlB,GAA3B,gFACLU,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,YAA0BR,IAN9C,uBAMKa,EANL,EAMKA,KANL,kBAOIA,GAPJ,gHAWA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCS,GAAhC,gFACLU,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASN,EACTO,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,YAA0BR,EAA1B,aANpB,uBAMKa,EANL,EAMKA,KANL,kBAOIA,EAAKzB,MAPT,gH","sources":["components/Cast/Cast.jsx","services/movie-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getDataActorById } from 'services/movie-api';\nimport { useParams } from 'react-router-dom';\n\nimport def from 'components/images/def.jpg';\n\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const dataCast = await getDataActorById(movieId);\n        setCast(dataCast);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast &&\n        (cast.length > 0 ? (\n          <ul>\n            {cast.map(({ profile_path, original_name, character, id }) => {\n              const img = profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : def;\n              return (\n                <li key={id}>\n                  <img src={img} alt=\"poster of character\" />\n                    <div>\n                      <h3>{original_name}</h3>\n                      <h3>{character || 'no name'}</h3>\n                    </div>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>No cast</p>\n        ))}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'bdb1d61caa10ee3e96be08f98c1048db';\nconst URL_All_DAY = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_MOVIE = 'https://api.themoviedb.org/3/search/movie';\nconst URL_MOVIE = 'https://api.themoviedb.org/3/movie';\n\nexport async function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_All_DAY}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_MOVIE}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getDataActorById","dataCast","toast","message","length","map","profile_path","original_name","character","id","img","def","src","alt","API_KEY","URL_All_DAY","URL_SEARCH_MOVIE","URL_MOVIE","getDataPopularCinema","axios","api_key","language","data","results","getDataByName","name","query","getDataById"],"sourceRoot":""}