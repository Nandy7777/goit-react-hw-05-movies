{"version":3,"file":"static/js/890.51694467.chunk.js","mappings":"oOAEaA,EAAYC,EAAAA,GAAAA,IAAH,wLAWTC,EAAOD,EAAAA,GAAAA,IAAH,kF,GAOUA,EAAAA,GAAAA,GAAH,mG,iBCUxB,EAxBkB,SAAC,GAAe,IAAbE,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,UACGG,EAAMG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAChCC,GAAYC,EAAAA,EAAAA,IAAa,mBAAoB,CACjDC,QAASH,IAELI,EAASN,EAAW,yCACYA,GAClCO,EACJ,OACE,UAAC,KAAD,CAAeC,GAAIL,EAAWM,MAAO,CAAEC,KAAMd,GAA7C,WACE,SAACF,EAAD,CAAMiB,IAAKL,EAAQM,IAAI,mBAAmBV,GAAIA,KAC9C,0BACE,wBAAKH,GAASE,QAHPC,EAOd,KAGN,C,wJCDD,EAtBa,WACX,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEwBC,EAAAA,EAAAA,MAFxB,OAESH,EAFT,OAGGC,EAAUD,GAHb,gDAKGI,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,EAQD,GAAE,KAGD,4BACE,4CACA,SAACC,EAAA,EAAD,CAAWzB,MAAOmB,MAGvB,C,6LCvBKO,EAAU,mCACVC,EAAc,gDACdC,EAAmB,4CACnBC,EAAY,qCAEX,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,6FACLQ,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaH,IANjC,uBAMKM,EANL,EAMKA,KANL,kBAOIA,EAAKC,SAPT,gHAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6B7B,GAA7B,gFACLwB,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVI,MAAM,GAAD,OAAK9B,IAJP,kBAOoBwB,EAAAA,GAAAA,IAAA,UAAaF,IAPjC,uBAOKK,EAPL,EAOKA,KAPL,kBAQIA,EAAKC,SART,gHAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2B9B,GAA3B,gFACLuB,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaD,EAAb,YAA0BtB,IAN9C,uBAMK0B,EANL,EAMKA,KANL,kBAOIA,GAPJ,gHAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgC/B,GAAhC,gFACLuB,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHP,kBAMoBF,EAAAA,GAAAA,IAAA,UAAaD,EAAb,YAA0BtB,EAA1B,aANpB,uBAMK0B,EANL,EAMKA,KANL,kBAOIA,EAAKM,MAPT,gHAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCjC,GAAlC,gFACLuB,EAAAA,GAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVS,KAAM,GAJH,kBAOoBX,EAAAA,GAAAA,IAAA,UAAaD,EAAb,YAA0BtB,EAA1B,aAPpB,uBAOK0B,EAPL,EAOKA,KAPL,kBAQIA,EAAKC,SART,gH","sources":["components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.jsx","components/Home/Home.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 1440px;\n  margin: 0 auto;\n  padding: 120px 0 60px;\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const Film = styled.img`\n  display: block;\n  width: 100%;\n  border-radius: 6px;\n`;\n\n\nexport const ProductName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import React from 'react';\nimport { useLocation, Link, generatePath } from 'react-router-dom';\nimport { Container, Film } from './FilmsList.styled';\n\nimport def from '../images/def.jpg';\n\nconst FilmsList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {films.map(({ title, poster_path, name, id }) => {\n        const movieLink = generatePath('/movies/:movieId', {\n          movieId: id,\n        });\n        const imgSrc = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : def;\n        return (\n          <Link key={id} to={movieLink} state={{ from: location }}>\n            <Film src={imgSrc} alt=\"poster of cinema\" id={id} />\n            <div>\n              <h3>{title || name}</h3>\n            </div>\n          </Link>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default FilmsList;\n","import { useState, useEffect } from 'react';\nimport { getDataPopularCinema } from 'services/movie-api';\nimport { toast } from 'react-toastify';\nimport FilmsList from 'components/FilmsList';\n\nconst Home = () => {\n  const [cinema, setCinema] = useState([]);\n  \n  useEffect(() => {\n    (async () => {\n      try {\n        const cinema = await getDataPopularCinema();\n        setCinema(cinema);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <FilmsList films={cinema} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'bdb1d61caa10ee3e96be08f98c1048db';\nconst URL_All_DAY = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_MOVIE = 'https://api.themoviedb.org/3/search/movie';\nconst URL_MOVIE = 'https://api.themoviedb.org/3/movie';\n\nexport async function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_All_DAY}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_MOVIE}`);\n    return data.results;\n  } catch (error) {}\n}\n\nexport async function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}`);\n    return data;\n  } catch (error) {}\n}\n\nexport async function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\nexport async function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_MOVIE}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}"],"names":["Container","styled","Film","films","location","useLocation","map","title","poster_path","name","id","movieLink","generatePath","movieId","imgSrc","def","to","state","from","src","alt","useState","cinema","setCinema","useEffect","getDataPopularCinema","toast","message","FilmsList","API_KEY","URL_All_DAY","URL_SEARCH_MOVIE","URL_MOVIE","axios","api_key","language","data","results","getDataByName","query","getDataById","getDataActorById","cast","getDataReviewsById","page"],"sourceRoot":""}